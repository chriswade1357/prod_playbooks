---
- name: Prompt User for PVLAN and VNI configuration to Nexus Switch(es) 
  hosts: "{{ target_host }}" ## User will be prompted for this information below
  gather_facts: false
  connection: local
  vars_prompt:
      ## Prompt user for host(s) or IP address to be configured
    - name: target_host
      prompt: "Enter Switch(es) IP or Name?"
      private: no
      
      ## Prompt user for VLAN number to be added
    - name: pvlan_one_id # User input variable
      private: no
      prompt: "Enter a SINGLE PVLAN Number?"
  
      ## Prompt user for VLAN name to be used
    - name: pvlan_one_name # User input variable
      private: no
      prompt: "Enter PVLAN Name (NO SPACES)?"

      ## Prompt user for VLAN name to be used
    - name: pvlan_one_type # User input variable
      private: no
      prompt: "Enter PVLAN Type; isolated or community?"

      ## Prompt user for VNI to be used with vlan_one_id
    - name: pvlan_one_vni # User input variable
      private: no 
      prompt: "Enter a SINGLE VNI Number for PVLAN?"  

  ## Take user input for target_host above and add to the hosts parameter
  tasks:
    - add_host:
        name: "{{ target_host }}"
  hosts: "{{ target_host }}"

################################################################################################################################################
### ATTENTION!! ABOVE VARIABLE PARAMETERS ARE SYNCHRONIZED WITH BELOW CONFIGURATIONS. DO NOT CHANGE BELOW SYNTAXES OR PLAYBOOK COULD FAIL!!!!###
################################################################################################################################################
  tasks:
    - name: Run show commands on primary PVLAN before configuration changes
      nxos_command:
        commands:
          - show run vlan 100
      register: print_output

    - debug: var=print_output.stdout_lines

                                    ## START OF SCRIPT PAUSE FOR NETWORK CONVERGENCE ##
    - pause:
        prompt: "Review Primary PVLAN 100 Configuration BEFORE Changes"
        seconds: 10

    ## Capture the output from the previous show commands into a file for later forensics, in case there is an issue.
    - name: Copy Switch(es) VLAN 100 configuration to External File, BEFORE Changes
      copy: 
        content: "{{ print_output.stdout_lines | to_nice_yaml(indent=2) }}" 
        dest: "/mnt/c/Users/criley/Documents/ansible_output_captures/{{ inventory_hostname }}_vlan100_backup_config.txt"

                                    ## START OF PVLAN_ONE_ID CONFIGURATION ##
    - name: Add PVLAN Configuration to VLAN Database
      cisco.nxos.nxos_command:
        commands:
        - configure terminal
        - command: vlan {{ pvlan_one_id }}
        - command: name {{ pvlan_one_name }}
        - command: private-vlan {{ pvlan_one_type }}
        - command: vn-segment {{ pvlan_one_vni }}
        - command: exit
        - command: end

    - name: Add PVLAN_ONE_ID Association to the Primary PVLAN
      nxos_config:
        lines:
          - private-vlan association add {{ pvlan_one_id }}
        parents: vlan 100

    - name: Configure PVLAN VNI for BGP replication
      nxos_evpn_vni:
        vni: "{{ pvlan_one_vni }}"
        route_distinguisher: "auto"
        route_target_import: auto
        route_target_export: auto
 
                                    ## START OF SAVING ABOVE CONFIGURATION TO STARTUP-CONFIGURATION ##
    - name: Save switch(es) configuration after script tasks complete
      nxos_config:
        save_when: always
                                    ## START OF SCRIPT PAUSE FOR NETWORK CONVERGENCE ##
    - pause:
        prompt: "Allow switch(es) 10 seconds to populate MAC Address Table for validation output at end of this script"
        seconds: 10
 
                                    ## START OF VLAN_ONE_ID VALIDATION ON SWITCH(ES) AND DISPLAY ##
    - name: Run show commands to validate PVLAN_ONE_ID operations
      nxos_command:
        commands:
          - show start vlan {{ pvlan_one_id }}
          - show start | sec evpn | sec {{ pvlan_one_vni }}
          - show start vlan 100
      register: print_output

    - debug: var=print_output.stdout_lines  

 
